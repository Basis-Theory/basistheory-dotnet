/*
 * Basis Theory API
 *
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BasisTheory.net.Api;
using BasisTheory.net.Model;
using BasisTheory.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BasisTheory.net.Test
{
    /// <summary>
    ///  Class for testing ValidationProblemDetails
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ValidationProblemDetailsTests
    {
        // TODO uncomment below to declare an instance variable for ValidationProblemDetails
        //private ValidationProblemDetails instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ValidationProblemDetails
            //instance = new ValidationProblemDetails();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ValidationProblemDetails
        /// </summary>
        [Test]
        public void ValidationProblemDetailsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ValidationProblemDetails
            //Assert.IsInstanceOf(typeof(ValidationProblemDetails), instance);
        }


        /// <summary>
        /// Test the property 'Errors'
        /// </summary>
        [Test]
        public void ErrorsTest()
        {
            // TODO unit test for the property 'Errors'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Detail'
        /// </summary>
        [Test]
        public void DetailTest()
        {
            // TODO unit test for the property 'Detail'
        }
        /// <summary>
        /// Test the property 'Instance'
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO unit test for the property 'Instance'
        }

    }

}
