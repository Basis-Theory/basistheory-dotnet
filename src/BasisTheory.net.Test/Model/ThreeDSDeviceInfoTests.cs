/*
 * Basis Theory API
 *
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BasisTheory.net.Api;
using BasisTheory.net.Model;
using BasisTheory.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BasisTheory.net.Test.Model
{
    /// <summary>
    ///  Class for testing ThreeDSDeviceInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ThreeDSDeviceInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ThreeDSDeviceInfo
        //private ThreeDSDeviceInfo instance;

        public ThreeDSDeviceInfoTests()
        {
            // TODO uncomment below to create an instance of ThreeDSDeviceInfo
            //instance = new ThreeDSDeviceInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ThreeDSDeviceInfo
        /// </summary>
        [Fact]
        public void ThreeDSDeviceInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ThreeDSDeviceInfo
            //Assert.IsType<ThreeDSDeviceInfo>(instance);
        }


        /// <summary>
        /// Test the property 'BrowserAcceptHeader'
        /// </summary>
        [Fact]
        public void BrowserAcceptHeaderTest()
        {
            // TODO unit test for the property 'BrowserAcceptHeader'
        }
        /// <summary>
        /// Test the property 'BrowserIp'
        /// </summary>
        [Fact]
        public void BrowserIpTest()
        {
            // TODO unit test for the property 'BrowserIp'
        }
        /// <summary>
        /// Test the property 'BrowserJavascriptEnabled'
        /// </summary>
        [Fact]
        public void BrowserJavascriptEnabledTest()
        {
            // TODO unit test for the property 'BrowserJavascriptEnabled'
        }
        /// <summary>
        /// Test the property 'BrowserJavaEnabled'
        /// </summary>
        [Fact]
        public void BrowserJavaEnabledTest()
        {
            // TODO unit test for the property 'BrowserJavaEnabled'
        }
        /// <summary>
        /// Test the property 'BrowserLanguage'
        /// </summary>
        [Fact]
        public void BrowserLanguageTest()
        {
            // TODO unit test for the property 'BrowserLanguage'
        }
        /// <summary>
        /// Test the property 'BrowserColorDepth'
        /// </summary>
        [Fact]
        public void BrowserColorDepthTest()
        {
            // TODO unit test for the property 'BrowserColorDepth'
        }
        /// <summary>
        /// Test the property 'BrowserScreenHeight'
        /// </summary>
        [Fact]
        public void BrowserScreenHeightTest()
        {
            // TODO unit test for the property 'BrowserScreenHeight'
        }
        /// <summary>
        /// Test the property 'BrowserScreenWidth'
        /// </summary>
        [Fact]
        public void BrowserScreenWidthTest()
        {
            // TODO unit test for the property 'BrowserScreenWidth'
        }
        /// <summary>
        /// Test the property 'BrowserTz'
        /// </summary>
        [Fact]
        public void BrowserTzTest()
        {
            // TODO unit test for the property 'BrowserTz'
        }
        /// <summary>
        /// Test the property 'BrowserUserAgent'
        /// </summary>
        [Fact]
        public void BrowserUserAgentTest()
        {
            // TODO unit test for the property 'BrowserUserAgent'
        }
        /// <summary>
        /// Test the property 'SdkTransactionId'
        /// </summary>
        [Fact]
        public void SdkTransactionIdTest()
        {
            // TODO unit test for the property 'SdkTransactionId'
        }
        /// <summary>
        /// Test the property 'SdkApplicationId'
        /// </summary>
        [Fact]
        public void SdkApplicationIdTest()
        {
            // TODO unit test for the property 'SdkApplicationId'
        }
        /// <summary>
        /// Test the property 'SdkEncryptionData'
        /// </summary>
        [Fact]
        public void SdkEncryptionDataTest()
        {
            // TODO unit test for the property 'SdkEncryptionData'
        }
        /// <summary>
        /// Test the property 'SdkEphemeralPublicKey'
        /// </summary>
        [Fact]
        public void SdkEphemeralPublicKeyTest()
        {
            // TODO unit test for the property 'SdkEphemeralPublicKey'
        }
        /// <summary>
        /// Test the property 'SdkMaxTimeout'
        /// </summary>
        [Fact]
        public void SdkMaxTimeoutTest()
        {
            // TODO unit test for the property 'SdkMaxTimeout'
        }
        /// <summary>
        /// Test the property 'SdkReferenceNumber'
        /// </summary>
        [Fact]
        public void SdkReferenceNumberTest()
        {
            // TODO unit test for the property 'SdkReferenceNumber'
        }
        /// <summary>
        /// Test the property 'SdkRenderOptions'
        /// </summary>
        [Fact]
        public void SdkRenderOptionsTest()
        {
            // TODO unit test for the property 'SdkRenderOptions'
        }

    }

}
