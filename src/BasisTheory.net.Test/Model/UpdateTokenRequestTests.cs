/*
 * Basis Theory API
 *
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BasisTheory.net.Api;
using BasisTheory.net.Model;
using BasisTheory.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BasisTheory.net.Test
{
    /// <summary>
    ///  Class for testing UpdateTokenRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UpdateTokenRequestTests
    {
        // TODO uncomment below to declare an instance variable for UpdateTokenRequest
        //private UpdateTokenRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UpdateTokenRequest
            //instance = new UpdateTokenRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UpdateTokenRequest
        /// </summary>
        [Test]
        public void UpdateTokenRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" UpdateTokenRequest
            //Assert.IsInstanceOf(typeof(UpdateTokenRequest), instance);
        }


        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Test]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }
        /// <summary>
        /// Test the property 'Privacy'
        /// </summary>
        [Test]
        public void PrivacyTest()
        {
            // TODO unit test for the property 'Privacy'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Test]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'SearchIndexes'
        /// </summary>
        [Test]
        public void SearchIndexesTest()
        {
            // TODO unit test for the property 'SearchIndexes'
        }
        /// <summary>
        /// Test the property 'FingerprintExpression'
        /// </summary>
        [Test]
        public void FingerprintExpressionTest()
        {
            // TODO unit test for the property 'FingerprintExpression'
        }
        /// <summary>
        /// Test the property 'Mask'
        /// </summary>
        [Test]
        public void MaskTest()
        {
            // TODO unit test for the property 'Mask'
        }
        /// <summary>
        /// Test the property 'ExpiresAt'
        /// </summary>
        [Test]
        public void ExpiresAtTest()
        {
            // TODO unit test for the property 'ExpiresAt'
        }
        /// <summary>
        /// Test the property 'DeduplicateToken'
        /// </summary>
        [Test]
        public void DeduplicateTokenTest()
        {
            // TODO unit test for the property 'DeduplicateToken'
        }
        /// <summary>
        /// Test the property 'Containers'
        /// </summary>
        [Test]
        public void ContainersTest()
        {
            // TODO unit test for the property 'Containers'
        }

    }

}
