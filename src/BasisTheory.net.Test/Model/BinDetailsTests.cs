/*
 * Basis Theory API
 *
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BasisTheory.net.Api;
using BasisTheory.net.Model;
using BasisTheory.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BasisTheory.net.Test
{
    /// <summary>
    ///  Class for testing BinDetails
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BinDetailsTests
    {
        // TODO uncomment below to declare an instance variable for BinDetails
        //private BinDetails instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BinDetails
            //instance = new BinDetails();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BinDetails
        /// </summary>
        [Test]
        public void BinDetailsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" BinDetails
            //Assert.IsInstanceOf(typeof(BinDetails), instance);
        }


        /// <summary>
        /// Test the property 'CardBrand'
        /// </summary>
        [Test]
        public void CardBrandTest()
        {
            // TODO unit test for the property 'CardBrand'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Prepaid'
        /// </summary>
        [Test]
        public void PrepaidTest()
        {
            // TODO unit test for the property 'Prepaid'
        }
        /// <summary>
        /// Test the property 'CardSegmentType'
        /// </summary>
        [Test]
        public void CardSegmentTypeTest()
        {
            // TODO unit test for the property 'CardSegmentType'
        }
        /// <summary>
        /// Test the property 'Bank'
        /// </summary>
        [Test]
        public void BankTest()
        {
            // TODO unit test for the property 'Bank'
        }
        /// <summary>
        /// Test the property 'Product'
        /// </summary>
        [Test]
        public void ProductTest()
        {
            // TODO unit test for the property 'Product'
        }
        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Test]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }
        /// <summary>
        /// Test the property 'Reloadable'
        /// </summary>
        [Test]
        public void ReloadableTest()
        {
            // TODO unit test for the property 'Reloadable'
        }
        /// <summary>
        /// Test the property 'PanOrToken'
        /// </summary>
        [Test]
        public void PanOrTokenTest()
        {
            // TODO unit test for the property 'PanOrToken'
        }
        /// <summary>
        /// Test the property 'AccountUpdater'
        /// </summary>
        [Test]
        public void AccountUpdaterTest()
        {
            // TODO unit test for the property 'AccountUpdater'
        }
        /// <summary>
        /// Test the property 'Alm'
        /// </summary>
        [Test]
        public void AlmTest()
        {
            // TODO unit test for the property 'Alm'
        }
        /// <summary>
        /// Test the property 'DomesticOnly'
        /// </summary>
        [Test]
        public void DomesticOnlyTest()
        {
            // TODO unit test for the property 'DomesticOnly'
        }
        /// <summary>
        /// Test the property 'GamblingBlocked'
        /// </summary>
        [Test]
        public void GamblingBlockedTest()
        {
            // TODO unit test for the property 'GamblingBlocked'
        }
        /// <summary>
        /// Test the property 'Level2'
        /// </summary>
        [Test]
        public void Level2Test()
        {
            // TODO unit test for the property 'Level2'
        }
        /// <summary>
        /// Test the property 'Level3'
        /// </summary>
        [Test]
        public void Level3Test()
        {
            // TODO unit test for the property 'Level3'
        }
        /// <summary>
        /// Test the property 'IssuerCurrency'
        /// </summary>
        [Test]
        public void IssuerCurrencyTest()
        {
            // TODO unit test for the property 'IssuerCurrency'
        }
        /// <summary>
        /// Test the property 'ComboCard'
        /// </summary>
        [Test]
        public void ComboCardTest()
        {
            // TODO unit test for the property 'ComboCard'
        }
        /// <summary>
        /// Test the property 'BinLength'
        /// </summary>
        [Test]
        public void BinLengthTest()
        {
            // TODO unit test for the property 'BinLength'
        }
        /// <summary>
        /// Test the property 'Authentication'
        /// </summary>
        [Test]
        public void AuthenticationTest()
        {
            // TODO unit test for the property 'Authentication'
        }
        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Test]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }

    }

}
