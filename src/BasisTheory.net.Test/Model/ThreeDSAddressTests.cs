/*
 * Basis Theory API
 *
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BasisTheory.net.Api;
using BasisTheory.net.Model;
using BasisTheory.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BasisTheory.net.Test
{
    /// <summary>
    ///  Class for testing ThreeDSAddress
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ThreeDSAddressTests
    {
        // TODO uncomment below to declare an instance variable for ThreeDSAddress
        //private ThreeDSAddress instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ThreeDSAddress
            //instance = new ThreeDSAddress();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ThreeDSAddress
        /// </summary>
        [Test]
        public void ThreeDSAddressInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ThreeDSAddress
            //Assert.IsInstanceOf(typeof(ThreeDSAddress), instance);
        }


        /// <summary>
        /// Test the property 'Line1'
        /// </summary>
        [Test]
        public void Line1Test()
        {
            // TODO unit test for the property 'Line1'
        }
        /// <summary>
        /// Test the property 'Line2'
        /// </summary>
        [Test]
        public void Line2Test()
        {
            // TODO unit test for the property 'Line2'
        }
        /// <summary>
        /// Test the property 'Line3'
        /// </summary>
        [Test]
        public void Line3Test()
        {
            // TODO unit test for the property 'Line3'
        }
        /// <summary>
        /// Test the property 'PostalCode'
        /// </summary>
        [Test]
        public void PostalCodeTest()
        {
            // TODO unit test for the property 'PostalCode'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'StateCode'
        /// </summary>
        [Test]
        public void StateCodeTest()
        {
            // TODO unit test for the property 'StateCode'
        }
        /// <summary>
        /// Test the property 'CountryCode'
        /// </summary>
        [Test]
        public void CountryCodeTest()
        {
            // TODO unit test for the property 'CountryCode'
        }

    }

}
