{
  "openapi": "3.0.1",
  "info": {
    "title": "Basis Theory API",
    "description": "## Getting Started\n* Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications)\n* Create a Basis Theory Private Application\n* All permissions should be selected\n* Paste the API Key into the `BT-API-KEY` variable",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.basistheory.com"
    }
  ],
  "paths": {
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_Get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPaginatedList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/applications/key": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_GetByKey",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/regenerate": {
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_RegenerateKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/applications/{id}/keys": {
      "post": {
        "tags": [
          "ApplicationKeys"
        ],
        "operationId": "ApplicationKeys_Create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationKey"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApplicationKeys"
        ],
        "operationId": "ApplicationKeys_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationKey"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/keys/{keyId}": {
      "get": {
        "tags": [
          "ApplicationKeys"
        ],
        "operationId": "ApplicationKeys_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationKey"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationKeys"
        ],
        "operationId": "ApplicationKeys_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/application-templates": {
      "get": {
        "tags": [
          "ApplicationTemplates"
        ],
        "operationId": "ApplicationTemplates_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/application-templates/{id}": {
      "get": {
        "tags": [
          "ApplicationTemplates"
        ],
        "operationId": "ApplicationTemplates_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/detokenize": {
      "post": {
        "tags": [
          "Detokenize"
        ],
        "operationId": "Detokenize_Detokenize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "operationId": "Logs_Get",
        "parameters": [
          {
            "name": "entity_type",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "^[A-z]+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "maxLength": 40,
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "maxLength": 40,
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "maxLength": 500,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/logs/entity-types": {
      "get": {
        "tags": [
          "Logs"
        ],
        "operationId": "Logs_GetEntityTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntityType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "operationId": "Permissions_Get",
        "parameters": [
          {
            "name": "application_type",
            "in": "query",
            "schema": {
              "maxLength": 25,
              "pattern": "^[A-z_]+$",
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/proxies": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_Get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyPaginatedList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProxyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/proxies/{id}": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProxyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProxyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Proxies"
        ],
        "operationId": "Proxies_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactor-formulas": {
      "get": {
        "tags": [
          "ReactorFormulas"
        ],
        "operationId": "ReactorFormulas_Get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactorFormulaPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReactorFormulas"
        ],
        "operationId": "ReactorFormulas_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReactorFormulaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactorFormula"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactor-formulas/{id}": {
      "get": {
        "tags": [
          "ReactorFormulas"
        ],
        "operationId": "ReactorFormulas_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactorFormula"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReactorFormulas"
        ],
        "operationId": "ReactorFormulas_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReactorFormulaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactorFormula"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReactorFormulas"
        ],
        "operationId": "ReactorFormulas_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactors": {
      "get": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactorPaginatedList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReactorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reactor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactors/{id}": {
      "get": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reactor"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReactorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reactor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchReactorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactors/{id}/react": {
      "post": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_React",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactors/{id}/react-async": {
      "post": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_React_Async",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactRequestAsync"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/reactors/{id}/results/{requestId}": {
      "get": {
        "tags": [
          "Reactors"
        ],
        "operationId": "Reactors_Result_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "operationId": "Sessions_Create",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/authorize": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "operationId": "Sessions_Authorize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/connections": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantConnections_CreateConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantConnectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTenantConnectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantConnections_DeleteConnection",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTenantConnectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/invitations": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantInvitations_CreateInvitation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantInvitations_GetInvitations",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TenantInvitationStatus"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInvitationResponsePaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/invitations/{invitationId}/resend": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantInvitations_ResendInvitation",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/invitations/{invitationId}": {
      "delete": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantInvitations_DeleteInvitation",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/members": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantMembers_GetMembers",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantMemberResponsePaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/members/{memberId}": {
      "put": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantMembers_UpdateMember",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantMemberResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantMembers_DeleteMember",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/owner": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "Tenants_Owner_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantMemberResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self/reports/usage": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "TenantReports_GetTenantUsageReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantUsageReport"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/self": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "Tenants_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "operationId": "Tenants_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "operationId": "Tenants_Delete",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/3ds/sessions": {
      "post": {
        "tags": [
          "ThreeDS"
        ],
        "operationId": "ThreeDS.CreateSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThreeDSSessionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateThreeDSSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/3ds/sessions/{sessionId}/authenticate": {
      "post": {
        "tags": [
          "ThreeDS"
        ],
        "operationId": "ThreeDS.AuthenticateSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateThreeDSSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDSAuthentication"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/3ds/sessions/{sessionId}/challenge-result": {
      "get": {
        "tags": [
          "ThreeDS"
        ],
        "operationId": "ThreeDS.GetChallengeResult",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDSAuthentication"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/3ds/sessions/{id}": {
      "get": {
        "tags": [
          "ThreeDS"
        ],
        "operationId": "ThreeDS.GetSessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDSSession"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tokenize": {
      "post": {
        "tags": [
          "Tokenize"
        ],
        "operationId": "Tokenize_Tokenize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/search": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTokensRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{id}": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 250,
              "pattern": "^.+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 200,
              "pattern": "^.+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tokens": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Get_V2",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "maxLength": 500,
              "pattern": "^.+$",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCursorPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tokens/search": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "operationId": "Tokens_Search_V2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTokensRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCursorPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "transform": {
            "type": "string",
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "key": {
            "maxLength": 100,
            "pattern": "[A-z0-9_.]+",
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "keys": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationKey"
            },
            "nullable": true
          },
          "type": {
            "maxLength": 50,
            "pattern": "^[A-z_]+$",
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "permissions": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationKey": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "application_type": {
            "type": "string",
            "nullable": true
          },
          "template_type": {
            "type": "string",
            "nullable": true
          },
          "is_starter": {
            "type": "boolean"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateThreeDSSessionRequest": {
        "required": [
          "authentication_category",
          "authentication_type",
          "requestor_info"
        ],
        "type": "object",
        "properties": {
          "authentication_category": {
            "minLength": 1,
            "type": "string"
          },
          "authentication_type": {
            "minLength": 1,
            "type": "string"
          },
          "challenge_preference": {
            "type": "string",
            "nullable": true
          },
          "purchase_info": {
            "$ref": "#/components/schemas/ThreeDSPurchaseInfo"
          },
          "merchant_info": {
            "$ref": "#/components/schemas/ThreeDSMerchantInfo"
          },
          "requestor_info": {
            "$ref": "#/components/schemas/ThreeDSRequestorInfo"
          },
          "cardholder_info": {
            "$ref": "#/components/schemas/ThreeDSCardholderInfo"
          },
          "broadcast_info": {
            "nullable": true
          },
          "message_extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreeDSMessageExtension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizeSessionRequest": {
        "required": [
          "nonce"
        ],
        "type": "object",
        "properties": {
          "nonce": {
            "minLength": 1,
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinDetails": {
        "type": "object",
        "properties": {
          "card_brand": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "prepaid": {
            "type": "boolean",
            "nullable": true
          },
          "card_segment_type": {
            "type": "string",
            "nullable": true
          },
          "bank": {
            "$ref": "#/components/schemas/BinDetailsBank"
          },
          "product": {
            "$ref": "#/components/schemas/BinDetailsProduct"
          },
          "country": {
            "$ref": "#/components/schemas/BinDetailsCountry"
          },
          "reloadable": {
            "type": "boolean",
            "nullable": true
          },
          "pan_or_token": {
            "type": "string",
            "nullable": true
          },
          "account_updater": {
            "type": "boolean",
            "nullable": true
          },
          "alm": {
            "type": "boolean",
            "nullable": true
          },
          "domestic_only": {
            "type": "boolean",
            "nullable": true
          },
          "gambling_blocked": {
            "type": "boolean",
            "nullable": true
          },
          "level2": {
            "type": "boolean",
            "nullable": true
          },
          "level3": {
            "type": "boolean",
            "nullable": true
          },
          "issuer_currency": {
            "type": "string",
            "nullable": true
          },
          "combo_card": {
            "type": "string",
            "nullable": true
          },
          "bin_length": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authentication": {
            "nullable": true
          },
          "cost": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinDetailsBank": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "clean_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinDetailsCountry": {
        "type": "object",
        "properties": {
          "alpha2": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "numeric": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinDetailsProduct": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardDetails": {
        "type": "object",
        "properties": {
          "bin": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Condition": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApplicationRequest": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "type": {
            "maxLength": 25,
            "minLength": 1,
            "pattern": "^[A-z_]+$",
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "nullable": true
          },
          "create_key": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProxyRequest": {
        "required": [
          "destination_url",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "destination_url": {
            "maxLength": 400,
            "minLength": 1,
            "pattern": "^https://.+$",
            "type": "string"
          },
          "request_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "response_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "request_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "response_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "require_auth": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReactorFormulaRequest": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "maxLength": 25,
            "minLength": 1,
            "pattern": "^(?:private|official)$",
            "type": "string"
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 50000,
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaConfiguration"
            },
            "nullable": true
          },
          "request_parameters": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaRequestParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "deprecated": true
      },
      "CreateReactorRequest": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "code": {
            "maxLength": 50000,
            "minLength": 1,
            "pattern": "^[\\S\\s]*$",
            "type": "string"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSessionResponse": {
        "type": "object",
        "properties": {
          "session_key": {
            "type": "string",
            "nullable": true
          },
          "nonce": {
            "type": "string",
            "nullable": true
          },
          "expires_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTenantConnectionRequest": {
        "required": [
          "options",
          "strategy"
        ],
        "type": "object",
        "properties": {
          "strategy": {
            "minLength": 1,
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/TenantConnectionOptions"
          }
        },
        "additionalProperties": false
      },
      "CreateTenantConnectionResponse": {
        "type": "object",
        "properties": {
          "connection_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTenantInvitationRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 330,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateThreeDSSessionRequest": {
        "required": [
          "pan"
        ],
        "type": "object",
        "properties": {
          "pan": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "device": {
            "type": "string",
            "nullable": true
          },
          "device_info": {
            "$ref": "#/components/schemas/ThreeDSDeviceInfo"
          }
        },
        "additionalProperties": false
      },
      "CreateThreeDSSessionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "cardBrand": {
            "type": "string",
            "nullable": true
          },
          "method_url": {
            "type": "string",
            "nullable": true
          },
          "method_notification_url": {
            "type": "string",
            "nullable": true
          },
          "directory_server_id": {
            "type": "string",
            "nullable": true
          },
          "recommended_version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTokenRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "data": { },
          "privacy": {
            "$ref": "#/components/schemas/Privacy"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "search_indexes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fingerprint_expression": {
            "type": "string",
            "nullable": true
          },
          "mask": {
            "nullable": true
          },
          "deduplicate_token": {
            "type": "boolean",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "nullable": true
          },
          "containers": {
            "maxItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CursorPagination": {
        "type": "object",
        "properties": {
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetApplications": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLogs": {
        "type": "object",
        "properties": {
          "entity_type": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          },
          "entity_id": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "maxLength": 500,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 5000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPermissions": {
        "type": "object",
        "properties": {
          "application_type": {
            "maxLength": 25,
            "pattern": "^[A-z_]+$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProxies": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetReactorFormulas": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetReactors": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTenantInvitations": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TenantInvitationStatus"
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTenantMembers": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "array",
            "items": {
              "maxLength": 36,
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 50,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTokens": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTokensV2": {
        "type": "object",
        "properties": {
          "start": {
            "maxLength": 500,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Log": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "actor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actor_type": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          },
          "entity_type": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          },
          "entity_id": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "operation": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          },
          "message": {
            "maxLength": 250,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogEntityType": {
        "type": "object",
        "properties": {
          "display_name": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          },
          "value": {
            "maxLength": 50,
            "pattern": "^[A-z]+$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 5000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Log"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total_pages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "after": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchProxyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "destination_url": {
            "type": "string",
            "nullable": true
          },
          "request_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "response_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "require_auth": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchReactorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "code": {
            "maxLength": 50000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 100,
            "pattern": "^[a-z]+(?::[a-z]+){1,2}:[a-z]+$",
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 250,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "application_types": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Privacy": {
        "type": "object",
        "properties": {
          "classification": {
            "maxLength": 25,
            "pattern": "^[A-z]*$",
            "type": "string",
            "nullable": true
          },
          "impact_level": {
            "maxLength": 10,
            "pattern": "^(?:low|moderate|high)$",
            "type": "string",
            "nullable": true
          },
          "restriction_policy": {
            "maxLength": 10,
            "pattern": "^(?:mask|redact)$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Proxy": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "maxLength": 100,
            "pattern": "^[A-z0-9]+$",
            "type": "string",
            "nullable": true
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "destination_url": {
            "maxLength": 400,
            "pattern": "^https://.+$",
            "type": "string",
            "nullable": true
          },
          "request_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "response_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "require_auth": {
            "type": "boolean"
          },
          "request_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "response_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "application_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "proxy_host": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxyPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Proxy"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxyTransform": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 50000,
            "type": "string",
            "nullable": true
          },
          "matcher": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "replacement": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReactRequest": {
        "type": "object",
        "properties": {
          "args": {
            "nullable": true
          },
          "callback_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReactRequestAsync": {
        "type": "object",
        "properties": {
          "args": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReactResponse": {
        "type": "object",
        "properties": {
          "tokens": {
            "nullable": true
          },
          "raw": {
            "nullable": true
          },
          "body": {
            "nullable": true
          },
          "headers": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Reactor": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "formula": {
            "$ref": "#/components/schemas/ReactorFormula"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReactorFormula": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "maxLength": 25,
            "pattern": "^(?:private|official)$",
            "type": "string",
            "nullable": true
          },
          "status": {
            "maxLength": 25,
            "pattern": "^(?:verified|coming_soon)$",
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "icon": {
            "maxLength": 50000,
            "pattern": "(^data:(image\\/png|image\\/jpg|image\\/jpeg|image\\/svg\\+xml);\\s*base64,\\s*(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{4})$)|(^data:(image\\/png|image\\/jpg|image\\/jpeg);\\s*base64,\\s*(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{4})$)",
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 4000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "configuration": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaConfiguration"
            },
            "nullable": true
          },
          "request_parameters": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaRequestParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "deprecated": true
      },
      "ReactorFormulaConfiguration": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[\\w-]+$",
            "type": "string"
          },
          "description": {
            "maxLength": 400,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 25,
            "minLength": 1,
            "pattern": "^(?:string|boolean|number)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReactorFormulaPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormula"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReactorFormulaRequestParameter": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[A-z0-9][A-z0-9.\\-_]*[A-z0-9]$",
            "type": "string"
          },
          "description": {
            "maxLength": 400,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 25,
            "minLength": 1,
            "pattern": "^(?:string|boolean|number)$",
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReactorPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reactor"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchTokensRequest": {
        "type": "object",
        "properties": {
          "query": {
            "maxLength": 200,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchTokensRequestV2": {
        "type": "object",
        "properties": {
          "query": {
            "maxLength": 200,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "start": {
            "maxLength": 500,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringStringKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[\\w-]+$",
            "type": "string"
          },
          "value": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "owner_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 200,
            "pattern": "^.+$",
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 50,
            "pattern": "^(?:test|production)$",
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantConnectionOptions": {
        "type": "object",
        "properties": {
          "domain_aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantInvitationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "maxLength": 200,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TenantInvitationStatus"
          },
          "expires_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantInvitationResponsePaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantInvitationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantInvitationStatus": {
        "enum": [
          "PENDING",
          "EXPIRED"
        ],
        "type": "string"
      },
      "TenantMemberResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "maxLength": 25,
            "pattern": "^A-z+$",
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantMemberResponsePaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantMemberResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantUsageReport": {
        "type": "object",
        "properties": {
          "token_report": {
            "$ref": "#/components/schemas/TokenReport"
          }
        },
        "additionalProperties": false
      },
      "ThreeDSAcsRenderingType": {
        "type": "object",
        "properties": {
          "acsInterface": {
            "type": "string",
            "nullable": true
          },
          "acsUiTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSAddress": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state_code": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSAuthentication": {
        "type": "object",
        "properties": {
          "pan_token_id": {
            "type": "string",
            "nullable": true
          },
          "threeds_version": {
            "type": "string",
            "nullable": true
          },
          "acs_transaction_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ds_transaction_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sdk_transaction_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "acs_reference_number": {
            "type": "string",
            "nullable": true
          },
          "ds_reference_number": {
            "type": "string",
            "nullable": true
          },
          "authentication_value": {
            "type": "string",
            "nullable": true
          },
          "authentication_status": {
            "type": "string",
            "nullable": true
          },
          "authentication_status_code": {
            "type": "string",
            "nullable": true
          },
          "authentication_status_reason": {
            "type": "string",
            "nullable": true
          },
          "eci": {
            "type": "string",
            "nullable": true
          },
          "acs_challenge_mandated": {
            "type": "string",
            "nullable": true
          },
          "acs_decoupled_authentication": {
            "type": "string",
            "nullable": true
          },
          "authentication_challenge_type": {
            "type": "string",
            "nullable": true
          },
          "acs_rendering_type": {
            "$ref": "#/components/schemas/ThreeDSAcsRenderingType"
          },
          "acs_signed_content": {
            "type": "string",
            "nullable": true
          },
          "acs_challenge_url": {
            "type": "string",
            "nullable": true
          },
          "challenge_attempts": {
            "type": "string",
            "nullable": true
          },
          "challenge_cancel_reason": {
            "type": "string",
            "nullable": true
          },
          "cardholder_info": {
            "type": "string",
            "nullable": true
          },
          "whitelist_status": {
            "type": "string",
            "nullable": true
          },
          "whitelist_status_source": {
            "type": "string",
            "nullable": true
          },
          "message_extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreeDSMessageExtension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSCardholderAccountInfo": {
        "type": "object",
        "properties": {
          "account_age": {
            "type": "string",
            "nullable": true
          },
          "account_last_changed": {
            "type": "string",
            "nullable": true
          },
          "account_change_date": {
            "type": "string",
            "nullable": true
          },
          "account_created_date": {
            "type": "string",
            "nullable": true
          },
          "account_pwd_last_changed": {
            "type": "string",
            "nullable": true
          },
          "account_pwd_change_date": {
            "type": "string",
            "nullable": true
          },
          "purchase_count_half_year": {
            "type": "string",
            "nullable": true
          },
          "transaction_count_day": {
            "type": "string",
            "nullable": true
          },
          "payment_account_age": {
            "type": "string",
            "nullable": true
          },
          "transaction_count_year": {
            "type": "string",
            "nullable": true
          },
          "payment_account_created": {
            "type": "string",
            "nullable": true
          },
          "shipping_address_first_used": {
            "type": "string",
            "nullable": true
          },
          "shipping_address_usage_date": {
            "type": "string",
            "nullable": true
          },
          "shipping_account_name_match": {
            "type": "boolean",
            "nullable": true
          },
          "suspicious_activity_observed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSCardholderAuthenticationInfo": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSCardholderInfo": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "nullable": true
          },
          "account_type": {
            "type": "string",
            "nullable": true
          },
          "account_info": {
            "$ref": "#/components/schemas/ThreeDSCardholderAccountInfo"
          },
          "authentication_info": {
            "$ref": "#/components/schemas/ThreeDSCardholderAuthenticationInfo"
          },
          "prior_authentication_info": {
            "$ref": "#/components/schemas/ThreeDSPriorAuthenticationInfo"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "$ref": "#/components/schemas/ThreeDSCardholderPhoneNumber"
          },
          "mobile_phone_number": {
            "$ref": "#/components/schemas/ThreeDSCardholderPhoneNumber"
          },
          "work_phone_number": {
            "$ref": "#/components/schemas/ThreeDSCardholderPhoneNumber"
          },
          "billing_shipping_address_match": {
            "type": "string",
            "nullable": true
          },
          "billing_address": {
            "$ref": "#/components/schemas/ThreeDSAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/ThreeDSAddress"
          }
        },
        "additionalProperties": false
      },
      "ThreeDSCardholderPhoneNumber": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSDeviceInfo": {
        "type": "object",
        "properties": {
          "browser_accept_header": {
            "type": "string",
            "nullable": true
          },
          "browser_ip": {
            "type": "string",
            "nullable": true
          },
          "browser_javascript_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "browser_java_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "browser_language": {
            "type": "string",
            "nullable": true
          },
          "browser_color_depth": {
            "type": "string",
            "nullable": true
          },
          "browser_screen_height": {
            "type": "string",
            "nullable": true
          },
          "browser_screen_width": {
            "type": "string",
            "nullable": true
          },
          "browser_tz": {
            "type": "string",
            "nullable": true
          },
          "browser_user_agent": {
            "type": "string",
            "nullable": true
          },
          "sdk_transaction_id": {
            "type": "string",
            "nullable": true
          },
          "sdk_application_id": {
            "type": "string",
            "nullable": true
          },
          "sdk_encryption_data": {
            "type": "string",
            "nullable": true
          },
          "sdk_ephemeral_public_key": {
            "type": "string",
            "nullable": true
          },
          "sdk_max_timeout": {
            "type": "string",
            "nullable": true
          },
          "sdk_reference_number": {
            "type": "string",
            "nullable": true
          },
          "sdk_render_options": {
            "$ref": "#/components/schemas/ThreeDSMobileSdkRenderOptions"
          }
        },
        "additionalProperties": false
      },
      "ThreeDSMerchantInfo": {
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "nullable": true
          },
          "acquirer_bin": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "category_code": {
            "type": "string",
            "nullable": true
          },
          "risk_info": {
            "$ref": "#/components/schemas/ThreeDSMerchantRiskInfo"
          }
        },
        "additionalProperties": false
      },
      "ThreeDSMerchantRiskInfo": {
        "type": "object",
        "properties": {
          "delivery_email": {
            "type": "string",
            "nullable": true
          },
          "delivery_time_frame": {
            "type": "string",
            "nullable": true
          },
          "gift_card_amount": {
            "type": "string",
            "nullable": true
          },
          "gift_card_count": {
            "type": "string",
            "nullable": true
          },
          "gift_card_currency": {
            "type": "string",
            "nullable": true
          },
          "pre_order_purchase": {
            "type": "boolean",
            "nullable": true
          },
          "pre_order_date": {
            "type": "string",
            "nullable": true
          },
          "reordered_purchase": {
            "type": "boolean",
            "nullable": true
          },
          "shipping_method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSMessageExtension": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "critical": {
            "type": "boolean",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSMethod": {
        "type": "object",
        "properties": {
          "method_url": {
            "type": "string",
            "nullable": true
          },
          "method_completion_indicator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSMobileSdkRenderOptions": {
        "type": "object",
        "properties": {
          "sdk_interface": {
            "type": "string",
            "nullable": true
          },
          "sdk_ui_type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSPriorAuthenticationInfo": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSPurchaseInfo": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "exponent": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "transaction_type": {
            "type": "string",
            "nullable": true
          },
          "installment_count": {
            "type": "string",
            "nullable": true
          },
          "recurring_expiration": {
            "type": "string",
            "nullable": true
          },
          "recurring_frequency": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSRequestorInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDSSession": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "pan_token_id": {
            "type": "string",
            "nullable": true
          },
          "card_brand": {
            "type": "string",
            "nullable": true
          },
          "expiration_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time"
          },
          "created_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_date": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "device": {
            "type": "string",
            "nullable": true
          },
          "device_info": {
            "$ref": "#/components/schemas/ThreeDSDeviceInfo"
          },
          "version": {
            "$ref": "#/components/schemas/ThreeDSVersion"
          },
          "method": {
            "$ref": "#/components/schemas/ThreeDSMethod"
          },
          "authentication": {
            "$ref": "#/components/schemas/ThreeDSAuthentication"
          }
        },
        "additionalProperties": false
      },
      "ThreeDSVersion": {
        "type": "object",
        "properties": {
          "recommended_version": {
            "type": "string",
            "nullable": true
          },
          "available_versions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "earliest_acs_supported_version": {
            "type": "string",
            "nullable": true
          },
          "earliest_ds_supported_version": {
            "type": "string",
            "nullable": true
          },
          "latest_acs_supported_version": {
            "type": "string",
            "nullable": true
          },
          "latest_ds_supported_version": {
            "type": "string",
            "nullable": true
          },
          "acs_information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 400,
            "pattern": "^.+$",
            "type": "string"
          },
          "type": {
            "maxLength": 50,
            "pattern": "^[A-z_]*$",
            "type": "string"
          },
          "tenant_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "enrichments": {
            "$ref": "#/components/schemas/TokenEnrichments"
          },
          "created_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fingerprint": {
            "maxLength": 100,
            "pattern": "^[A-z0-9]*$",
            "type": "string",
            "nullable": true
          },
          "fingerprint_expression": {
            "maxLength": 400,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "mask": {
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/Privacy"
          },
          "search_indexes": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "expires_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "containers": {
            "pattern": "^(?!.*\\/\\/)(?=.*\\/$)\\/[A-z0-9_\\-\\/]*$",
            "maxItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "aliases": {
            "maxItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "_extras": {
            "$ref": "#/components/schemas/TokenExtras"
          }
        },
        "additionalProperties": false
      },
      "TokenCursorPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenEnrichments": {
        "type": "object",
        "properties": {
          "bin_details": {
            "$ref": "#/components/schemas/BinDetails"
          },
          "card_details": {
            "$ref": "#/components/schemas/CardDetails"
          }
        },
        "additionalProperties": false
      },
      "TokenExtras": {
        "type": "object",
        "properties": {
          "deduplicated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TokenMetrics": {
        "type": "object",
        "properties": {
          "count": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "last_created_at": {
            "maxLength": 40,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenPaginatedList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenReport": {
        "type": "object",
        "properties": {
          "included_monthly_active_tokens": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "monthly_active_tokens": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "metrics_by_type": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TokenMetrics"
            },
            "nullable": true
          },
          "total_tokens": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UpdateApplicationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "permissions": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePrivacy": {
        "type": "object",
        "properties": {
          "impact_level": {
            "type": "string",
            "nullable": true
          },
          "restriction_policy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProxyRequest": {
        "required": [
          "destination_url",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "destination_url": {
            "maxLength": 400,
            "minLength": 1,
            "pattern": "^https://.+$",
            "type": "string"
          },
          "request_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "response_reactor_id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "request_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "response_transform": {
            "$ref": "#/components/schemas/ProxyTransform"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "require_auth": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReactorFormulaRequest": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 25,
            "minLength": 1,
            "pattern": "^(?:private|official)$",
            "type": "string"
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 50000,
            "pattern": "^[\\S\\s]*$",
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaConfiguration"
            },
            "nullable": true
          },
          "request_parameters": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactorFormulaRequestParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "deprecated": true
      },
      "UpdateReactorRequest": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "code": {
            "maxLength": 50000,
            "minLength": 1,
            "pattern": "^[\\S\\s]*$",
            "type": "string"
          },
          "configuration": {
            "maxLength": 25,
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantMemberRequest": {
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^.+$",
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTokenRequest": {
        "type": "object",
        "properties": {
          "data": {
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/UpdatePrivacy"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "search_indexes": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fingerprint_expression": {
            "maxLength": 400,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "mask": {
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "nullable": true
          },
          "deduplicate_token": {
            "type": "boolean",
            "nullable": true
          },
          "containers": {
            "maxItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "maxLength": 200,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "mfa_enrolled": {
            "type": "boolean"
          },
          "first_name": {
            "maxLength": 200,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "maxLength": 200,
            "pattern": "^.*$",
            "type": "string",
            "nullable": true
          },
          "picture": {
            "maxLength": 400,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Authorization by API Key inside request's BT-API-KEY header",
        "name": "BT-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}